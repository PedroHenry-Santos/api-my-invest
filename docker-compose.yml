version: "3"
services:
  application:
    container_name: api-my-invest-${NODE_ENV}
    environment:
      - NODE_ENV:${NODE_ENV}
      - APP_PORT:${APP_PORT}
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - database
    networks:
      - nesjs-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-my-invest
    links:
      - database:database
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - nesjs-network

  database:
    image: bitnami/postgresql:latest
    container_name: database-my-invest
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRESQL_USERNAME=${POSTGRES_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRES_DATABASE}
    networks:
      - nesjs-network
    tty: true
    restart: always
  
  cache:
    image: bitnami/redis:latest
    container_name: redis-my-invest
    ports:
      -  ${REDIS_EXTERNAL_PORT}:${REDIS_PORT}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./redis/data:/usr/local/redis/data
      - ./redis/redis.log:/usr/local/redis/redis.log
    
    networks:
      - nesjs-network
    restart: always

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-my-invest
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - BACKEND_PORT=${APP_PORT}
    ports:
      - 80:${NGINX_PORT}
    depends_on:
      - database
      - application
    networks:
      - nesjs-network

networks:
  nesjs-network: